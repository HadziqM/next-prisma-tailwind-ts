// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres:suweseru@localhost/prisma"
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Ship {
  id       Int    @id @default(autoincrement())
  ship     Kapal  @relation(fields: [brand], references: [brand])
  brand    String
  username String
}

model Kapal {
  id     Int       @id @default(autoincrement())
  brand  String    @unique
  fuel   Fuel[]
  rpm    Rpm[]
  temp   Temp[]
  press  Press[]
  vib    Vibrate[]
  sensor Sense[]
  ship   Ship[]
}

model Fuel {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  fuel     Int
  maxFuel  Int
  stg      Int
  stt      Int
  srv      Int
  updated  DateTime @default(now())
}

model Rpm {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  rpm      Int
  updated  DateTime @default(now())
}

model Temp {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  temp     Int
  updated  DateTime @default(now())
}

model Press {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  press    Int
  updated  DateTime @default(now())
}

model Vibrate {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  vib      Int
  updated  DateTime @default(now())
}

model Sense {
  id       Int      @id @default(autoincrement())
  ship     Kapal    @relation(fields: [shipName], references: [brand])
  shipName String
  vib      Int
  gps_n    Int
  gps_w    Int
  distance BigInt
  updated  DateTime @default(now())
}
